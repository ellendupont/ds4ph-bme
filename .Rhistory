demo()
demo(colors)
2+2
git init
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# or maybe it reads changes if I make them in the console instead?
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# ti doesn't appear that anything is tracking this
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# it doesn't appear that anything is tracking this
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# it does not appear that anything is tracking this
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# it does not appear that anything is tracking this
git init
# ds4ph-bme
# adding spaces here like in tutorial
if that even worked?
2+2
# it does not appear that anything is tracking this
git init
.git init
# now is it tracking?
# ds4ph-bme
# My question is how do I make git track this
# ds4ph-bme
# My question is how do I make git track this
git push
# ds4ph-bme
# My question is how do I make git track this
git push
git command
# ds4ph-bme
# My question is how do I make git track this
git push
git command
. git command
# ds4ph-bme
# My question is how do I make git track this
git push
git command
. git command
.git command
git push
# ds4ph-bme
# My question is how do I make git track this
git push
git command
. git command
.git command
git push origin main
# Hello Prof
# Hello Prof
<p> I really like using markdown syntax </p>
# Hello Prof
# <p> I really like using markdown syntax </p>
# Hello Prof
git push
# Hello Prof
# ##Just using mardown script nbd
# probably?
# I still don't understand
2+2
# Hello Prof
# ##Just using mardown script nbd
# probably?
# I still don't understand
2+2
# I also don't understand why, if I am changing this document, those changes aren't reflected in GutHub desktop
# I'm still trying to learn how to do this
2+2
# I'm still trying to learn how to do this
2+2
# I am so incredibly confused by this entire process.
## For example, is this markdown text? can you use markdown text within a line of code? I have no idea! Please send help. I am in over my heard in this course.
# Good lord please help
# Look at me, I created a markdown file!
# ds4bmetest
For the assignment, of course.
Two roads diverged in a yellow wood
And I was incapable of choosing, so I went home.
# assignment1-ellendupont
assignment1-ellendupont created by GitHub Classroom <br>
<br>
# Check me out, submitting my first assignment. What a pro! <br>
<br>
Q1: Fork the course repository. Create a directory called Test. Add a markdown file to your Test directory called aNewReadme.md. Edit this file using markdown syntax to include a description of what you've done. Create screenshots to show what you've done and hand in the screenshots. <br>
![Q1 image](https://github.com/ds4ph-bme/assignment1-ellendupont/blob/main/Images/Assn2SS1.png)
<br>
Q2: Issue a pull request for the course repository. Create a screenshot of your pull request. Hand in the screenshot. <br>
![Q2 image](https://github.com/ds4ph-bme/assignment1-ellendupont/blob/main/Images/Assn2SS2.png) <br>
<br>
Q3: Create a new github repository called ds4bmeTest; add a readme file. <br>
![Q3 image](https://github.com/ds4ph-bme/assignment1-ellendupont/blob/main/Images/Assn2SS3.png) <br>
<br>
Q4: Clone the ds4bmeTest, make a change to the readme file and push the changes back up to your repo. <br>
<br>
Q5: Download or create a simple webpage; commit it to your repository and serve the webpage using github pages. <br>
<br>
Q6: Create a branch for your ds4bmeTest called development. Add a file called testing.md <br>
![Q6 image](Images/Assn2SS6.png)
clear
clear
clear
print "hello world"
2+2
L
x = 4
3x
3*x
data()
head(cars)
a
c
data
head(ChickWeight)
head(ChickWeight, 10)
tail(ChickWeight, 5)
var1
var1 = 5
ls
ls
var1 = 5
var.test()
x = 10
x <-9
x == 10
x < 8
x==10
x==9
c(1, 2, 3)
x = c(1, 2, 3)
x
2*x
x / x
x ^ 2
X ^ 1
x ^ 1
x ^ 0
"this is a string"
'this is also a string'
y = Ellen
y = "Ellen"
y = 'Ellen\s new knowledge'
y = 'Ellen\'s new knowledge'
y
2*y
is.numeric(y)
is.character(y)
clear
print "that's better"
clear
clear
print(why not)
print(hello world)
print(2+2)
print("hellow orld")
print("that's better")
print
print("whyyyy")
whoami
install.packages("wget")
curl https://en.wikipedia.org/wiki/Chewbacca_defense | wc
print(paste(“The year is”, 2010))
print(paste(“The year is”, 2011))
print(paste(“The year is”, 2012))
print(paste(“The year is”, 2013))
print(paste(“The year is”, 2014))
print(paste(“The year is”,2010))
print("THe year is")
print((“The year is”, 2010))
print(paste0(“The year is”, 2010))
for (year in c(2010,2011,2012,2013,2014,2015)){
print(paste("The year is", year))
}
for (year in c(2010:2015)){
print(paste("The year is", year))
}
for (i in 1:10){}
for (i in 1:10){
if(!i %% 2){
next
}
print(i)
}
x = 10
while(x > 0){
print(paste0(“The value of x is: “, x))
x = x-1
}
while(x > 0){
print(pasteO("The value of x is: ", x))
x = x-1
}
while(x > 0){
print(paste("The value of x is: ", x))
x = x-1
}
sequence(1:11, by=2
)
sequence(1:10, by=2)
?sequence
seq(1, 10, by=2)
seq (1:10, by=2)
seq(1, 20, by=5)
seq(0, 20, by=5)
x = seq(0, 20, by=5)
x
x + x
seq(1, 10, length=10)
seq(1, 10, length = 4)
seq(1, 10, length = 3)
x
TRUE
x[TRUE, FALSE, TRUE, FALSE, TRUE]
x[c(TRUE, FALSE, TRUE, FALSE, TRUE)]
1/0
x
x = c(1 ,2, 3)
x
x = c(x, NA)
x
mean(x)
mean(x, rm.NA)
mean(x, rm.NA = TRUE)
mean(x, NA.rm)
mean (x, na.rm = true)
mean(x, NA.rm = TRUE)
mean(x, NA.rm = TRUE)
x
mean(x, na.rm = TRUE)
y = list(w = TRUE, x = x, z = "String")
y
y$x
y$x * 2
y[1] *2
y[1]
y[2]
y[2] * 2
y[[2]] * 2
x = matrix(1:12, 4, 3)
x
x[1, 2]
x
x[4, 3]
data.frame(v1 = 1:4, v2 = a:d)
data.frame(v1 = 1:4, v2 = letters
x
data.frame(v1 = 1:4, v2 = letters(1:4))
ltrs
letters
data.frame(v1 = 1:4, v2 = letters[1:4])
data("InsectSprays")
head(InsectSprays)
tail(InsectSprays)
tail(InsectSprays, 10)
data.frame(v1 = 1:4, v2 = letters[1:4])
z = data.frame(v1 = 1:4, v2 = letters[1:4])
z$v1[1] = 0
z
z$v1
z$v2
z$v1[4] = NULL
twelveRoot = function(x){}
twelveRoot = function(x){
x ^ (1/12)
return(x)
}
twelveRoot = function(x){
x ^ (1/12)
return(x)
}
12*12
2 ^ 12
twelveRoot(4096)
twelveRoot(1.10)
twelveRoot = function(x){
y = x ^ (1/12)
return(y)
}
twelveRoot(4096)
Root = function(x){
y = x ^ (1/2)
return(y)
}
Root(16)
twelveRoot(4096)
y
rval
c
Root(c(4, 16, 100))
yearToX = function(x, unit = “month”){
if (unit == “day”) p = 1/365
else if (unit == “week”) p = 1/52
else p = 1/12
rval = x ^ p
return(rval)
}
yearToX = function(x, unit = “month”){
if (unit == “day”) p = 1/365
else if (unit == “week”) p = 1/52
else p = 1/12
rval = x ^ p
return(rval)
}
yearToX = function(x, unit = “month”){
if (unit == “day”) p = 1/365
else if (unit == “week”) p = 1/52
else p = 1/12
y = x ^ p
return(y)
}
yearToX = function(x, unit = "month"){
if (unit == "day") p = 1/365
else if (unit =="week") p = 1/52
else p = 1/12
y = x ^ p
return(y)
}
yearToX(1.2)
yearToX(1.2, unit = "day")
twelveRoot = function(x){}
mylag = function(x){}
matrix(c(1, 5, 8, 4), 4, 3)
mylag = function(vec1 = c(1, 5, 8, 4), vec2 = c(1, 3)){
return(matrix(vec1, 4, 3))
}
mylag()
mylag = function(vec1 = c(a, b, c, d), vec2 = c(y, z)){
return(matrix(vec1, 4, 3))
}
mylag(c(1, 5, 8, 4), c(1, 3))
?lag
mylag = function(vec1 = c(a, b, c, d), vec2 = c(y, z)){
c1 = vec1
c2 = lag(vec1, k = y)
c3 = lag(vec1, k = z)
return(cbind(c1, c2, c3))
}
mylag(c(1, 5, 8, 4), c(1, 3))
mylag(c(1, 5, 8, 4), c(1, 3))
mylag(c(1, 5, 8, 4), c(1, 3))
vec1 = c(1 2 3 4)
vec1 = c(1, 2, 3, 4)
vec1
vec2 = lag(vec1, k=1)
vec2
clear
q
vec2
vec2 = lag(vec1, k=1)
vec1 = c(1, 2, 3, 4)
vec2 = lag(vec1, k=1)
vec1
vec2
z = 5
vec2 = lag(vec1, k = z)
vec2
z = -1
vec2
z = 1
vec2
vec1 = c(1, 2, 3, 4)
vec2 = lag(vec1, k = z)
vec2
vec1 = c(1, 2, 3, 4)
vec1
vec2 = lag(vec1, k = z)
vec2
vec2 = lag(vec1, k = 1)
vec2
hastsp(vec1)
hasTsp(vec1)
vec1 = c(1, 2, 3, 4)
vec1
vec2 = lag(vec1, k = 1)
vec2
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
return(lag(v, k = v2))
}
mylag(c(1, 5, 8, 4), c(1, 3))
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
v = pseries
return(lag(v, k = v2))
}
mylag(c(1, 5, 8, 4), c(1, 3))
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
return(lag(v, k = v2))
}
mylag(c(1, 5, 8, 4), c(1, 3))
vec1 = c(1, 2, 3, 4)
lag(vec1, k = -1)
concat <- c(1, 3)
c(1, 3)
lag(vec1, k = concat)
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
ts(v)
return(lag(v, k = v2))
}
mylag(c(1, 5, 8, 4), c(1, 3))
vec1 = c(1, 2, 3, 4)
as.ts(vec1)
vec1 = c(1, 2, 3, 4)
as.ts(vec1)
vec2 = lag(as.ts(vec1), k = 1)
vec2
vec1 = c(1, 2, 3, 4)
vec1
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
c2 = v
c3 = v
return(cbind(v, c2, c3)
}
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
return(cbind(v, v, v)
}
mylag = function(v = c(a, b, c, d), v2 = c(y, z)){
return(cbind(v, v, v)
}
mylag = function(x = c(a, b, c, d){
return(cbind(v, v, v)
}
mylag = function(x = c(a, b, c, d){
return(cbind(v, v))
}
mylag = function(x = c(a, b, c, d){
return(cbind(x, x))
}
mylag = function(x, x = c(a, b, c, d){
return(cbind(x, x))
}
return(cbind(x, x)) }
mylag = function(x, x = c(a, b, c, d){
return(cbind(x, x))
}
mylag = function(x, x = c(a, b, c, d){
y = cbind(x, x)
return(y)
}
lagpractice = function(x){
y = cbind(x, x)
return(y)
}
lagpractice(c(1, 2, 3, 4))
var1 = c(1, 2, 3, 4)
lag(rval, k = 1)
lag(var1, k = 1)
lagpractice = function(x, y){
L1 = data.table::shift(x)
rval = cbind(x, L1)
return(rval)
}
lagpractice(c(1, 2, 3, 4))
mylag = function(x, k){
L0 = x
L1 = c(NA, x[-1])
rval = cbind(L0, L1)
return(rval)
}
mylag(c(1,2 3, 4))
mylag = function(x, k){
if (k > 0){
return(c(rep(NA, k), x)[1 : length(x)])
}
else {
return (c(x[(-k+1) : length(x)], rep(NA, -k)))
}
?rep
?rep
mylag = function(x, k){
L0 = x
L1 = c(NA, x[-1])
rval = cbind(L0, L1)
return(rval)
}
mylag(c(1,2 3, 4))
mylag(c(1,2, 3, 4))
read.html()
read.csv(chewie.html)
wc -l "chewie.html"
read.delim(chewie.html)
read.delim(~/Documents/GitHub/assignment-2-ellendupont/chewie.html)
read.delim(C:/Users/ellendupont/Documents/GitHub/assignment-2-ellendupont/chewie.html)
pwd
getwd
cd ..
chewie.html <- read.delim(https://en.wikipedia.org/wiki/Chewbacca)
read.delim(https://en.wikipedia.org/wiki/Chewbacca)
read.delim("https://en.wikipedia.org/wiki/Chewbacca"")
q
countLines
close(file)
var1 = c(1, 2, 3, 4)
wc -l
read.delim(~/Documents/GitHub/assignment-2-ellendupont/chewie.html)
read.delim(~/Documents/GitHub/assignment-2-ellendupont/chewie.html)
length(readLines)
